@page
@model WhereToWatch.Pages.Shows.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Shows</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form>
    <p>
        Find by title:
        <input type="text" name="SearchString" value="@Model.CurrentFilter" />
        <input type = "submit" value="Search" class="btn btn-primary" /> |
        <a asp-page="./Index">Back to full list</a> 
    </p>
</form>
@* <form>
    <select asp-for="CurrentSort" asp-items="Model.SortList">
        <option value="">Sort by</option>
    </select>
    <button type="submit">Sort</button>
</form> *@

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSortAsc"
                asp-route-currentFilter="@Model.CurrentFilter">
                 @Html.DisplayNameFor(model => model.Show[0].Title)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSortAsc"
                asp-route-currentFilters="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Show[0].ReleaseDate)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Show[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Show[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Show[0].Rating)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Show) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @foreach (var service in item.ShowService)
                {
                    @service.Service.Name <br />
                }
                @if (item.ShowService.Count == 0)
                {
                    @:Not available on any streaming services
                }
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ShowId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ShowId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ShowId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<hr />
 @{
    var prevDisabled = !Model.Show.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Show.HasNextPage ? "disabled" : "";

    @* if (Model.PageNum <= 1)
    {
        prevDisabled = "disabled";
    } *@

} 

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Show.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Show.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>

@* <nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @prevDisabled"><a class="page-link" asp-page="./Index" asp-route-asp-route-PageNum="@(Model.PageNum - 1)">Previous</a></li>
        <li class="page-item"><a class="page-link" asp-page="./Index" asp-route-PageNum="@(Model.PageNum + 1)">Next</a></li>
    </ul>
</nav> *@
